version: '3.7'
services:
  api:
    container_name: api
    image: ${PROJECT_NAME}-api:latest
    build:
      context: ./api
      target: api_stage
      args:
        - APP_ENV=${APP_ENV}
        - PHP_VERSION=${PHP_VERSION}
        - SYMFONY_PHPUNIT_VERSION=${SYMFONY_PHPUNIT_VERSION}
    restart: unless-stopped
    environment:
      - APP_ENV=${APP_ENV}
      - PHP_VERSION=${PHP_VERSION}
      - SYMFONY_PHPUNIT_VERSION=${SYMFONY_PHPUNIT_VERSION}
      - DATABASE_URL=${DATABASE_URL}
      - TRUSTED_PROXIES=${TRUSTED_PROXIES}
      - TRUSTED_HOSTS=${SERVER_NAME}
    depends_on:
      - database
    ports:
      - "${API_PORT_I}:${API_PORT_TARGET}"
    volumes:
      - socket_data:/var/run/php

  # nginx:
  #   image: ${PROJECT_NAME}-nginx:latest
  #   build:
  #     context: ./docker/
  #     args:
  #       BUILD_ARGUMENT_ENV: dev
  #     dockerfile: ./nginx/Dockerfile
  #   container_name: ${COMPOSE_PROJECT_NAME}_nginx
  #   restart: always
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - .:/var/www/html:ro,cached
  #   depends_on:
  #     - api
  #   networks:
  #     - symfony

  # mailer:
  #     image: schickling/mailcatcher
  #     ports: [1025, 1080]

  database:
    container_name: database
    image: postgres:${POSTGRES_VERSION}
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./api/docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "${POSTGRES_PORT_I}:${POSTGRES_PORT_TARGET}"

  database_admin:
    container_name: database_admin
    image: dpage/pgadmin4:${PGADMIN_VERSION}
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT_I}:${PGADMIN_PORT_TARGET}"

volumes:
  database_data:
  socket_data:
